#整数

a = int(input())

# スペース区切りの整数の入力
b, c = map(int, input().split())

#二次元配列
N, Q = map(int,input().split())
a = [list(map(int, input().split())) for l in range(N + Q)]

# 文字列の入力
s = input()

# 出力
print("{} {}".format(a+b+c, s))

#str型で受け取るとき
s = input() 
#int型で受け取るとき
s = int(input()) 
#float型　(小数)で受け取るとき
s = float(input())

#list型で取得
l = list(map(int, input().split()))

# 2じげん
N = int(input())
x = list(map(int, input().split()))
y = list(map(int, input().split()))


https://qiita.com/jamjamjam/items/e066b8c7bc85487c0785https://qiita.com/jamjamjam/items/e066b8c7bc85487c0785#進数変換
.hex
 #16進数0ｘ削除大文字
 print(format(N, '02x').upper())
https://qiita.com/jamjamjam/items/e066b8c7bc85487c0785


# 出現回数
l = list(map(str, input().split()))
c = collections.Counter(l)
print(c.most_common()[-1][0])

# どこからどこまで
 for i in range(1,n-1):

 # 配列の重複をなくす
a = set(a)

# 配列以外のものが含まれているか
a = ["A", "T", "C", "G"]
for i in range(len(s)):
    cnt = 0
    for j in range(i, len(s)):
        if s[j] not in a:
            break
        cnt += 1
    ans = max(ans, cnt)
print(ans)


# 連続した文字カウント
import io
import sys
import statistics
import math
import queue
import heapq

num = int(input())
s = input()

ans = 0
a = "ABC"
for i in range(0,num-2):
    if s[i] == "A":
        if s[i+1] == "B":
            if s[i+2] == "C":
                ans+=1
print(ans)

# 桁数を取得
len(str(i)) 

# Listの一致部分を取得
merge = set(alist) & set(blist)
# 大きい順に取得
print(sorted(merge,reverse=True)[k-1])


# 最大値とそのList上の位置
start = max(l)
start = l.index(start)


# 辞書型作成/追加/
mydict  = {}
mydict[0] = 0
c = 1
for i in l:
    mydict[c] = i
    c+=1
for key,value in mydict.items():
    mydict[value] = 0    

# 辞書の最大値をもつKeyを複数返す
max_k_list = [kv[0] for kv in mydict.items() if kv[1] == max(mydict.values())]